version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: backend_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_api
    environment:
      NODE_ENV: production
      PORT: 5000
      # MongoDB Atlas - Cloud database (no local container needed)
      MONGODB_URI: ${MONGODB_URI}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRE: 7d
      API_VERSION: v1
      RATE_LIMIT_WINDOW: 15
      RATE_LIMIT_MAX: 100
      CORS_ORIGIN: http://localhost:3000
      ENABLE_SWAGGER: 'false'
      BASE_URL: http://localhost:5000
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/health"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # In production, the image should be immutable (no bind mounts)
    # command omitted to use Dockerfile CMD (npm start)

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: backend_frontend
    environment:
      REACT_APP_API_BASE_URL: http://localhost:5000/api/v1
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_started
    # No bind mounts in production
  restart: unless-stopped

volumes:
  redis_data:
